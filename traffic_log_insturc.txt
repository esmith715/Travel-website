To implement a traffic log system that tracks total, new, and returning visitors, session durations, and pages visited, we can follow these steps:

Steps to Implement Traffic Logging
Create a New Page for Traffic Logs:

Create a new React page (e.g., TrafficLog.jsx) to display the traffic data.
Backend Endpoint for Traffic Logging:

Update the backend to log traffic data (IP addresses, session durations, pages visited) in a JSON file (traffic_data.json).
Frontend Integration:

Use a function to send traffic data to the backend whenever a user visits a page.
Track New and Returning Users:

Use cookies or local storage to identify returning users based on a unique identifier.
Display Traffic Data:

Fetch and display the traffic data on the TrafficLog page.
1. Create a New Page: TrafficLog.jsx
Create a new React component to display the traffic data.


import React, { useEffect, useState } from 'react';
import axios from 'axios';
import './TrafficLog.css';

const TrafficLog = () => {
  const [trafficData, setTrafficData] = useState([]);

  useEffect(() => {
    const fetchTrafficData = async () => {
      const response = await axios.get('http://localhost:5000/api/traffic');
      setTrafficData(response.data.websiteTraffic);
    };

    fetchTrafficData();
  }, []);

  return (
    <div className="traffic-log">
      <h1>Website Traffic Log</h1>
      <table>
        <thead>
          <tr>
            <th>Timestamp</th>
            <th>IP Address</th>
            <th>Pages Visited</th>
            <th>Session Duration (seconds)</th>
            <th>Referrer</th>
          </tr>
        </thead>
        <tbody>
          {trafficData.map((entry, index) => (
            <tr key={index}>
              <td>{entry.timestamp}</td>
              <td>{entry.ipAddress}</td>
              <td>{entry.pagesVisited.join(', ')}</td>
              <td>{entry.sessionDuration}</td>
              <td>{entry.referrer || 'Direct'}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default TrafficLog;




2. Backend Endpoint for Traffic Logging
Update the backend to log traffic data in traffic_data.json.


  app.post('/api/traffic', async (req, res) => {
  const { ipAddress, pageVisited, referrer, sessionDuration } = req.body;
  const filePath = path.join(__dirname, 'traffic_data.json');

  // Read existing traffic data
  let trafficData = { websiteTraffic: [] };
  if (fs.existsSync(filePath)) {
    const fileContent = fs.readFileSync(filePath, 'utf-8');
    trafficData = JSON.parse(fileContent);
  }

  // Check if the user is new or returning
  const isReturningUser = trafficData.websiteTraffic.some(entry => entry.ipAddress === ipAddress);

  // Add new traffic entry
  const newEntry = {
    timestamp: new Date().toISOString(),
    ipAddress,
    pagesVisited: [pageVisited],
    referrer,
    sessionDuration,
    isReturningUser,
  };

  // Update existing user data or add a new entry
  const existingUser = trafficData.websiteTraffic.find(entry => entry.ipAddress === ipAddress);
  if (existingUser) {
    existingUser.pagesVisited.push(pageVisited);
    existingUser.sessionDuration += sessionDuration;
  } else {
    trafficData.websiteTraffic.push(newEntry);
  }

  // Write updated traffic data back to the file
  fs.writeFileSync(filePath, JSON.stringify(trafficData, null, 2));

  res.send(newEntry);
});

app.get('/api/traffic', async (req, res) => {
  const filePath = path.join(__dirname, 'traffic_data.json');
  if (fs.existsSync(filePath)) {
    const fileContent = fs.readFileSync(filePath, 'utf-8');
    const trafficData = JSON.parse(fileContent);
    res.send(trafficData);
  } else {
    res.send({ websiteTraffic: [] });
  }
});



1 vulnerability


3. Frontend Integration
Add a function to log traffic data from the frontend.

import axios from 'axios';

const logTraffic = async (pageVisited, sessionDuration) => {
  const ipAddress = await fetch('https://api.ipify.org?format=json')
    .then(response => response.json())
    .then(data => data.ip);

  const referrer = document.referrer || null;

  await axios.post('http://localhost:5000/api/traffic', {
    ipAddress,
    pageVisited,
    referrer,
    sessionDuration,
  });
};

export default logTraffic;


4. Track Traffic on Each Page
Use the logTraffic function in your React components to log traffic data.

// Example usage in a page component
import React, { useEffect } from 'react';
import logTraffic from '../../utils/logTraffic';

const HomePage = () => {
  useEffect(() => {
    const startTime = Date.now();

    return () => {
      const sessionDuration = Math.floor((Date.now() - startTime) / 1000);
      logTraffic('/home', sessionDuration);
    };
  }, []);

  return <div>Welcome to the Home Page!</div>;
};

export default HomePage;



5. Display Traffic Data
Style the TrafficLog page to display the traffic data in a readable format.

.traffic-log {
    padding: 20px;
  }
  
  .traffic-log h1 {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .traffic-log table {
    width: 100%;
    border-collapse: collapse;
  }
  
  .traffic-log th, .traffic-log td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: left;
  }
  
  .traffic-log th {
    background-color: #f4f4f4;
  }



6. Add the TrafficLog Page to Routes
Add the TrafficLog page to your app's routes.

import TrafficLog from './pages/TrafficLog/TrafficLog';

const App = () => {
  return (
    <Routes>
      {/* Other routes */}
      <Route path="/traffic-log" element={<TrafficLog />} />
    </Routes>
  );
};

Summary
Backend: Logs traffic data (traffic_data.json) and distinguishes between new and returning users.
Frontend: Sends traffic data (IP address, pages visited, session duration) to the backend.
TrafficLog Page: Displays the logged traffic data in a table format.
This setup will allow you to track and analyze website traffic effectively.